swagger: '2.0'
info:
  description: This is a prototype Aware ABIS API
  version: 1.0.0
  title: Aware ABIS API
  contact:
    email: help@aware.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

#host: localhost:8091
# basePath: /AwareAbis

#host: vm-esx7-03.aware.com:8085
#basePath: /BioSP/rest/

host: localhost:8070
basePath: /BioSP/rest

schemes:
 - http
 - https

consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  basicAuth:
    type: basic

# To apply Basic auth to the whole API:
security:
  - basicAuth: []


# tags are used for organizing operations
tags:
  - name: biosp
    description: BioSP primitive service
  - name: enrollments
    description: APIs related to enrollments
  - name: identification
    description: APIs related to identifications
  - name: reviews
    description: APIs related to reviews
  - name: subjects
    description: APIs related to subjects
  - name: verification
    description: APIs related to verification
  - name: latents
    description: APIs related to latent images
#- name: cases
#  description: APIs related to cases
  - name: notifications
    description: APIs related to notifications
  - name: subjectHistory
    description: APIs related to subject histories obtained from externals systems

paths:
  /aggregateLogicalAccessService/listResourcesAuthorizedForUser:
    post:
      tags:
        - biosp
      summary: Authenticate user
      operationId: listResourcesAuthorizedForUser
      description: Returns authentication and authorization information for account
      parameters:
        - in: body
          name: listResourcesAuthorizedForUserParameters
          description: Enrollment item to add
          schema:
            type: object
            title: listResourcesAuthorizedForUserRequest
            example:
              username: abis
            properties:
              username:
                type: string
      responses:
        200:
          description: Success
          schema:
            title: listResourcesAuthorizedForUserResponse
            type: object
            properties:
              resourceNames:
                type: object
                title: ResourceNames
                properties:
                  name:
                    type: array
                    items:
                      type: string
              statusMessages:
                $ref: "#/definitions/statusMessages"
        401:
          description: Unauthorized
        500:
          description: Failure
          schema:
            $ref: "#/definitions/statusMessage"

  /galleryMatcherService/listConfiguredGalleries:
    get:
      tags:
        - biosp
      summary: List galleries
      operationId: listConfiguredGalleries
      description: Returns a list of galleries in the system
      responses:
        200:
          description: Success
          schema:
            title: listConfiguredGalleriesResponse
            type: object
            properties:
              item:
                type: array
                items:
                  $ref: "#/definitions/gallery"
              statusMessages:
                $ref: "#/definitions/statusMessages"
        401:
          description: Unauthorized
        500:
          description: Failure
          schema:
            $ref: "#/definitions/statusMessage"

#
# Enrollments
#

  /abisManagerService/enrollment:
    post:
      tags:
        - enrollments
      summary: Enroll Biometric
      operationId: SubmitEnrollment
      description: Starts an enrollment
      parameters:
        - in: body
          name: enrollParameters
          description: Enrollment item to add
          schema:
            type: object
            title: enrollmentRequest
            properties:
              transaction:
                $ref: "#/definitions/transaction"
              galleries:
                type: array
                items:
                  type: string
              isSync:
                type: boolean
              binaryTransaction:
                type: string
                format: byte
      responses:
        200:
          description: Enrollment Created
          schema:
            title: enrollmentResponse
            type: object
            properties:
              value:
                type: array
                items:
                  type: object
                  properties:
                    enrollmentId:
                      type: string
                    galleryName:
                      type: string
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden

    get:
      tags:
        - enrollments
      summary: List enrollments
      operationId: ListEnrollments
      description: List/Search enrollments. All current enrollments will be returned. Filters can be added in future releases.
      parameters:
        - in: query
          name: query
          description: Query string for search
          type: string
        - in: query
          name: next
          description: Opaque value from previous call to get next set of results.
          type: string
      responses:
        200:
          description: Success
          schema:
            title: enrollmentGetResponse
            type: object
            properties:
              value:
                type: array
                items:
                  type: object
                  required:
                    - enrollmentId
                    - created
                    - status
                  properties:
                    enrollmentId:
                      type: string
                    created:
                      type: string
                      format: date-time
                    username:
                      type: string
                    modalities:
                      $ref: "#/definitions/modalities"
                    status:
                      $ref: "#/definitions/enrollmentStatus"
                    galleryName:
                      type: string
                    priority:
                      type: integer
                    handled:
                      $ref: "#/definitions/handled"
              next:
                type: string
                description: If not all results are returned, the resource can be queried again by passing this value to get the next set of results.
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /abisManagerService/enrollment/{enrollmentId}:
    get:
      tags:
        - enrollments
      summary: Get enrollment
      operationId: GetEnrollment
      description: Get status information on an enrollment
      parameters:
        - in: path
          name: enrollmentId
          type: string
          required: true
          description: Enrollment Id for get enrollment
      responses:
        200:
          description: Success
          schema:
            type: object
            title: getEnrollmentIdResponse
            properties:
              subjectId:
                type: string
              galleryName:
                type: string
              priority:
                type: integer
              handled:
                $ref: "#/definitions/handled"
              duplicateCandidateList:
                $ref: "#/definitions/candidateList"
              status:
                $ref: "#/definitions/enrollmentStatus"
              error:
                $ref: "#/definitions/error"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    put:
      tags:
        - enrollments
      summary: Update the enrollment
      operationId: UpdateEnrollment
      description: Updates the enrollment
      parameters:
        - in: path
          name: enrollmentId
          type: string
          required: true
          description: Enrollment Id for get enrollment
        - in: body
          name: updateEnrollmentParameters
          description: Items to update
          schema:
            type: object
            title: updateEnrollmentRequest
            properties:
              handled:
                $ref: "#/definitions/handled"
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

    delete:
      tags:
        - enrollments
      summary: (NOT IMPLEMENTED) Delete enrollment
      operationId: DeleteEnrollment
      description: Delete a pending or failed enrollment
      parameters:
        - in: path
          name: enrollmentId
          type: string
          required: true
          description: id of enrollment to delete
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

  /abisManagerService/enrollment/{enrollmentId}/transaction:
    get:
      tags:
        - enrollments
      summary: Get enrollment transaction
      operationId: GetEnrollmentTransaction
      description: Get status information on an enrollment
      parameters:
        - in: path
          name: enrollmentId
          type: string
          required: true
          description: Enrollment Id for get enrollment
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/transaction"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

  /abisManagerService/enrollment/{enrollmentId}/candidate/{candidateId}:
    get:
      tags:
        - enrollments
      summary: Gets the duplicate candidate
      operationId: GetEnrollmentCandidate
      description: Get status information on an enrollment
      parameters:
        - in: path
          name: enrollmentId
          type: string
          required: true
          description: Enrollment id for the enrollment to get back the enrollment transaction
        - in: path
          name: candidateId
          type: string
          required: true
          description: Candidate id for the enrollment to get back the candidate transaction
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/candidate"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
#
#Identify
#

  /abisManagerService/identify:
    post:
      tags:
        - identification
      summary: Submit an identify request
      operationId: SubmitIdentify
      description: Performs '1:n' search with supplied biometrics
      parameters:
        - in: body
          name: identifyParameters
          description: Parameter for identify search input
          schema:
            title: identifyRequest
            type: object
            properties:
              transaction:
                $ref: "#/definitions/transaction"
              galleries:
                type: array
                items:
                  type: string
              binaryTransaction:
                type: string
                format: byte
              isSync:
                type: boolean
      responses:
        200:
          description: Success
          schema:
            title: identifyResponse
            type: object
            properties:
              value:
                type: array
                items:
                  type: object
                  properties:
                    identifyId:
                      type: string
                    galleryName:
                      type: string
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden

    get:
      tags:
        - identification
      summary: List identify requests
      operationId: ListIdentifies
      description: List/Search identifications. All current identifications will be returned. Filters can be added in future releases.
      parameters:
        - in: query
          name: query
          description: Query string for search
          type: string
        - in: query
          name: next
          description: Opaque value from previous call to get next set of results.
          type: string
      responses:
        200:
          description: Success
          schema:
            title: identifyGetResponse
            type: object
            properties:
              value:
                type: array
                items:
                  type: object
                  properties:
                    identifyId:
                      type: string
                    created:
                      type: string
                      format: date-time
                    username:
                      type: string
                    modalities:
                      $ref: "#/definitions/modalities"
                    galleryName:
                      type: string
                    decision:
                      $ref: "#/definitions/decision"
                    status:
                      $ref: "#/definitions/identifyStatus"
                    contributorCaseIdentifierNumber:
                      $ref: "#/definitions/contributorCaseIdentifierNumber"
                    contributorCaseIdentifierExtension:
                      type: integer
                    transactionControlNumber:
                      type: string
                    priority:
                      type: integer
                    handled:
                      $ref: "#/definitions/handled"
                    candidateListLength:
                      type: integer
                  required:
                    - identifyId
                    - created
                    - status
              next:
                type: string
                description: If not all results are returned, the resource can be queried again by passing this value to get the next set of results.

        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /abisManagerService/identify/{identifyId}:
    get:
      tags:
        - identification
      summary: Get identify results
      operationId: GetIdentify
      description: Gets identify results based on id
      parameters:
        - in: path
          name: identifyId
          type: string
          required: true
          description: id for get identify
      responses:
        200:
          description: Success
          schema:
            title: identifyIdGetResponse
            type: object
            properties:
              galleryName:
                type: string
              status:
                $ref: "#/definitions/identifyStatus"
              notes:
                type: string
              candidateList:
                $ref: "#/definitions/candidateList"
              username:
                type: string
              decision:
                $ref: "#/definitions/decision"
              priority:
                type: integer
              handled:
                $ref: "#/definitions/handled"
              modalities:
                $ref: "#/definitions/modalities"
              error:
                $ref: "#/definitions/error"

        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

    put:
      tags:
        - identification
      summary: Update identify results
      operationId: UpdateIdentify
      description: Update identify resource based on id
      parameters:
        - in: path
          name: identifyId
          type: string
          required: true
          description: id for get identify
        - in: body
          name: updateIdentifyParameters
          description: Items to update
          schema:
            type: object
            title: updateIdentifyRequest
            properties:
              handled:
                $ref: "#/definitions/handled"
      responses:
        200:
          description: Success
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

    delete:
      tags:
        - identification
      summary: Cancel identify request
      operationId: DeleteIdentify
      description: If an identify is not complete, deletes the request
      parameters:
        - in: path
          name: identifyId
          type: string
          required: true
          description: Id for delete identify
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

  /abisManagerService/identify/{identifyId}/probe:
    get:
      tags:
        - identification
      summary: Get probe
      operationId: GetIdentifyProbe
      description: Returns biometrics and/or match data generated from the search
      parameters:
        - in: path
          name: identifyId
          type: string
          required: true
          description: Id of the identify operation
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/transaction"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found


  /abisManagerService/identify/{identifyId}/candidate/{candidateId}:
    get:
      tags:
        - identification
      summary: Get candidate
      operationId: GetIdentifyCandidate
      description: Returns candidate biometrics
      parameters:
        - in: path
          name: identifyId
          type: string
          required: true
          description: Id of the identify operation
        - in: path
          name: candidateId
          type: string
          required: true
          description: candidateId that was returned from the candidate list
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/candidate"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

#
# Verification
#

  /abisManagerService/verify:
    post:
      tags:
        - verification
      summary: Submit a verification request
      operationId: SubmitVerify
      description: Performs '1:1' search with supplied biometrics
      parameters:
        - in: body
          name: verifyParameters
          description: Parameters for verify search input
          schema:
            type: object
            title: verifyRequest
            properties:
              transaction:
                $ref: "#/definitions/transaction"
              subjectId:
                type: string
              galleries:
                type: array
                items:
                  type: string
              binaryTransaction:
                type: string
                format: byte
              isSync:
                type: boolean
      responses:
        200:
          description: Success
          schema:
            title: verifyResponse
            type: object
            properties:
              value:
                type: array
                items:
                  type: object
                  properties:
                    verifyId:
                      type: string
                    galleryName:
                      type: string

        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

  /abisManagerService/verify/{verifyId}:
    get:
      tags:
        - verification
      summary: Get verification results
      operationId: GetVerify
      description: Gets verify results based on supplied id
      parameters:
        - in: path
          name: verifyId
          type: string
          required: true
          description: Verification id
      responses:
        200:
          description: Success
          schema:
            title: verifySubjectId
            type: object
            properties:
              status:
                $ref: "#/definitions/identifyStatus"
              decision:
                $ref: "#/definitions/decision"
              score:
                type: integer
              handled:
                $ref: "#/definitions/handled"
              modalities:
                $ref: "#/definitions/modalities"
              error:
                $ref: "#/definitions/error"
              galleryName:
                type: string
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

  /abisManagerService/verify/{verifyId}/probe:
    get:
      tags:
        - verification
      summary: Get verification probe
      operationId: GetVerifyProbe
      description: Returns the probe used in a verify
      parameters:
        - in: path
          name: verifyId
          type: string
          required: true
          description: Id for get verify
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/transaction"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

  /abisManagerService/verify/{verifyId}/subject:
    get:
      tags:
        - verification
      summary: Get verification subject
      operationId: GetVerifySubject
      description: Returns the subject used in a verify
      parameters:
        - in: path
          name: verifyId
          type: string
          required: true
          description: Id for get verify
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/candidate"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
#
# Review
#

  /abisManagerService/review:
    get:
      tags:
        - reviews
      summary: List review request
      operationId: ListReviews
      description: List/Search reviews
      parameters:
        - in: query
          name: query
          description: Query string for search
          type: string
        - in: query
          name: next
          description: Opaque value from previous call to get next set of results.
          type: string
      responses:
        200:
          description: Success
          schema:
            title: reviewResponse
            type: object
            properties:
              value:
                type: array
                items:
                  type: object
                  properties:
                    reviewId:
                      type: string
                    created:
                      type: string
                      format: date-time
                    username:
                      type: string
                    modality:
                      $ref: "#/definitions/modality"
                    status:
                      $ref: "#/definitions/reviewStatus"
                    priority:
                      type: string
                    galleryName:
                      type: string
              next:
                type: string
                description: If not all results are returned, the resource can be queried again by passing this value to get the next set of results.
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /abisManagerService/review/{reviewId}:
    get:
      tags:
        - reviews
      summary: Gets review data
      operationId: GetReviewData
      description: Get the review data for the given reviewId
      parameters:
        - in: path
          name: reviewId
          type: string
          required: true
          description: Id for start review
      responses:
        200:
          description: Sucess
          schema:
            title: getReviewDataResponse
            type: object
            properties:
              candidateList:
                $ref: "#/definitions/candidateList"
              galleryName:
                type: string
              priority:
                type: integer
              modality:
                $ref: "#/definitions/modality"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
          
    post:
      tags:
        - reviews
      summary: Start a review
      operationId: StartReview
      description: Starts a review with id
      parameters:
        - in: path
          name: reviewId
          type: string
          required: true
          description: Id for start review

      responses:
        200:
          description: Review started
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden

    put:
      tags:
        - reviews
      summary: Completes a review
      operationId: CompleteReview
      description: Accepts the match decisions and completes the review.
      parameters:
        - in: path
          name: reviewId
          type: string
          required: true
          description: Id for update review
        - in: body
          name: updateReviewByIdParameters
          description: Object for review by id that needs to be updated
          required: true
          schema:
            type: object
            title: ReviewUpdate
            properties:
              notes:
                type: string
              decisions:
                type: array
                items:
                  type: object
                  title: DecisionEntry
                  properties:
                    candidateId:
                      type: string
                    decision:
                      $ref: "#/definitions/decision"
                    notes:
                      type: string

      responses:
        200:
          description: Success
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        404:
          description: Not found
    delete:
      tags:
        - reviews
      summary: Cancel a review
      operationId: DeleteReview
      description: Cancels a review. Changes status from STARTED to PENDING
      parameters:
        - in: path
          name: reviewId
          type: string
          required: true
          description: Id for delete review
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

  /abisManagerService/review/{reviewId}/probe:
    get:
      tags:
        - reviews
      summary: Get review probe
      operationId: GetReviewProbe
      description: Returns the probe for the review
      parameters:
        - in: path
          name: reviewId
          type: string
          required: true
          description: Id for get review
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/transaction"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

  /abisManagerService/review/{reviewId}/candidates/{candidateId}:
    get:
      tags:
        - reviews
      summary: Get review candidate
      operationId: GetReviewCandidate
      description: Returns a candidate to use in the review
      parameters:
        - in: path
          name: reviewId
          type: string
          required: true
          description: Id for get review
        - in: path
          name: candidateId
          type: string
          required: true
          description: candidateId for get review
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/candidate"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
#
# Subject
#

  /abisManagerService/subject:
    get:
      tags:
        - subjects
      summary: List subjects
      operationId: ListSubjects
      description: List/Search subjects
      parameters:
        - in: query
          name: query
          required: true
          description: Query string for search
          type: string
        - in: query
          name: next
          description: Opaque value from previous call to get next set of results.
          type: string
      responses:
        200:
          description: Success
          schema:
            title: SubjectGetResponse
            type: object
            properties:
              value:
                type: array
                items:
                  $ref: "#/definitions/subjectListEntry"
              next:
                type: string
                description: If not all results are returned, the resource can be queried again by passing this value to get the next set of results.
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /abisManagerService/subject/{subjectId}:
    get:
      tags:
        - subjects
      summary: Get subject
      operationId: GetSubject
      description: Retrieve subject & biometrics
      parameters:
        - in: path
          name: subjectId
          type: string
          required: true
          description: subjectId for get subject
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/subjectTransaction"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    put:
      tags:
        - subjects
      summary: (NOT IMPLEMENTED) Update subject
      operationId: UpdateSubject
      description: Updates a subject
      parameters:
        - in: path
          name: subjectId
          type: string
          required: true
          description: Id for update a subject
        - in: body
          name: updateSubjectParameters
          description: Object for updating subject by id
          required: true
          schema:
            type: object
            properties:
              transaction:
                $ref: "#/definitions/subjectTransaction"
              binaryTransaction:
                type: string
                format: byte
      responses:
        200:
          description: Success
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    delete:
      tags:
        - subjects
      summary: Deletes subject
      operationId: DeleteSubject
      description: Deletes a subject
      parameters:
        - in: path
          name: subjectId
          type: string
          required: true
          description: Id for delete subject
      responses:
        200:
          description: Success
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

#
# Latents
#

  /abisManagerService/latent:
    get:
      tags:
        - latents
      summary: List latents
      operationId: ListLatents
      description: List/Search latent prints
      parameters:
        - in: query
          name: query
          description: Query string for search
          type: string
        - in: query
          name: next
          description: Opaque value from previous call to get next set of results.
          type: string
      responses:
        200:
          description: Success
          schema:
            title: latentGetResponse
            type: object
            properties:
              value:
                type: array
                items:
                  type: object
                  properties:
                    latentId:
                      type: string
                    created:
                      type: string
                      format: date-time
                    username:
                      type: string
                    modalities:
                      $ref: "#/definitions/modalities"
                    contributorCaseIdentifierNumber:
                      $ref: "#/definitions/contributorCaseIdentifierNumber"
                    galleries:
                      type: array
                      items:
                        type: string
              next:
                type: string
                description: If not all results are returned, the resource can be queried again by passing this value to get the next set of results.
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /abisManagerService/latent/{latentId}:
    get:
      tags:
        - latents
      summary: Get latent
      operationId: GetLatent
      description: Retrieve latent
      parameters:
        - in: path
          name: latentId
          type: string
          required: true
          description: Id for get latent
      responses:
        200:
          description: Success
          schema:
            $ref: "#/definitions/latentTransaction"
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    put:
      tags:
        - latents
      summary: Update latent
      operationId: UpdateLatent
      description: Updates a latent
      parameters:
        - in: path
          name: latentId
          type: string
          required: true
          description: Id for update a latent
        - in: body
          name: updateLatentByIdParameters
          description: Object for updating latent by id
          required: true
          schema:
            type: object
            properties:
              transaction:
                $ref: "#/definitions/latentTransaction"
              binaryTransaction:
                type: string
                format: byte
      responses:
        200:
          description: Success
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found
    delete:
      tags:
        - latents
      summary: Delete latent
      operationId: DeleteLatent
      description: Deletes a latent
      parameters:
        - in: path
          name: latentId
          type: string
          required: true
          description: Id for delete latent
      responses:
        200:
          description: Success
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

#
# Notifications
#

  /abisManagerService/notifications:
    get:
      tags:
        - notifications
      summary: (NOT IMPLEMENTED) Get notifications
      operationId: GetNotifications
      description: Returns notifications
      parameters:
        - in: query
          name: query
          required: true
          description: Query string for returned notifications
          type: string
        - in: query
          name: next
          description: Opaque value from previous call to get next set of results.
          type: string
      responses:
        200:
          description: Success
          schema:
            type: object
            title: notificationResponse
            properties:
              notifications:
                type: array
                items:
                  type: object
                  properties:
                    notificationId:
                      type: string
                    resource:
                      type: string
                    resourceId:
                      type: string
                    time:
                      type: string
                      format: data-time
                    message:
                      type: string
              next:
                type: string
                description: If not all results are returned, the resource can be queried again by passing this value to get the next set of results.
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /abisManagerService/notifications/{notificationId}:
    delete:
      tags:
        - notifications
      summary: (NOT IMPLEMENTED) Delete a notification
      operationId: DeleteNotification
      description: Removes a notification
      parameters:
        - in: path
          name: notificationId
          type: string
          required: true
          description: Id of the notification to remove
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

#
# Subject History
#

  /abisManagerService/subjectHistory:
    get:
      tags:
        - subjectHistory
      summary: (NOT IMPLEMENTED) Search for subject history
      operationId: ListSubjectHistory
      description: Search subject history
      parameters:
        - in: query
          name: query
          required: true
          description: Query string for search
          type: string
      responses:
        200:
          description: Success
          schema:
            title: SubjectHistoryGetResponse
            type: object
            properties:
              subjectHistorySearchResults:
                type: string
                description: A string containing the result of the search. Format of the string is dependent on the external history system.
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
    post:
      tags:
        - subjectHistory
      summary: (NOT IMPLEMENTED) Get a new subject history id
      operationId: SubmitSubjectHistory
      description: Get a new subject history id
      responses:
        200:
          description: Success
          schema:
            title: SubjectHistoryGetId
            type: object
            properties:
              subjectHistoryId:
                type: string
                description: A string containing the new subject history id from the external history system.
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden

  /abisManagerService/subjectHistory/{subjectHistoryId}:
    get:
      tags:
        - subjectHistory
      summary: (NOT IMPLEMENTED) Get subject history
      operationId: GetSubjectHistory
      description: Retrieve subject history
      parameters:
        - in: path
          name: subjectHistoryId
          type: string
          required: true
          description: subjectHistoryId for get subject history
      responses:
        200:
          description: Success
          schema:
            title: SubjectHistoryGetSubjectResponse
            type: object
            properties:
              subjectHistory:
                type: string
                description: A string containing the subject history. Format of the string is dependent on the external history system.
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

    put:
      tags:
        - subjectHistory
      summary: (NOT IMPLEMENTED) Update subject history
      operationId: UpdateSubjectHistory
      description: Updates subject history
      parameters:
        - in: path
          name: subjectHistoryId
          type: string
          required: true
          description: Id for update a subject
        - in: body
          name: updateSubjectParameters
          description: Object for updating subject by id
          required: true
          schema:
            title: UpdateHistory
            type: object
            properties:
              subjectHistory:
                type: string
                description: A string containing the subject history. Format of the string is dependent on the external history system.
      responses:
        200:
          description: Success
        400:
          description: Bad input
          schema:
            $ref: "#/definitions/error"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not found

#
# Definitions
#

definitions:
  error:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
      target:
        type: string

      innerError:
        type: object

  enrollmentStatus:
    type: string
    enum:
      - WAITING
      - MATCHING
      - PENDING_REVIEW
      - IN_REVIEW
      - COMPLETE
      - ERROR
      - DUPLICATE
      - ARCHIVE

  identifyStatus:
    type: string
    enum:
      - WAITING
      - MATCHING
      - PENDING_REVIEW
      - IN_REVIEW
      - COMPLETE
      - ERROR
      - ARCHIVE

  reviewStatus:
    type: string
    enum:
      - PENDING_REVIEW
      - IN_REVIEW
      - COMPLETE
      - ARCHIVE

  decision:
    type: string
    enum:
      - NOT_SET
      - HIT
      - NO_HIT
      - INCONCLUSIVE

  galleryType:
    type: string
    enum:
      - LATENT
      - LATENT_PALM
      - PALM
      - FINGER
      - FINGER_PALM

  modality:
    type: string
    enum:
      - FINGER
      - PALM
      - LATENT
      - LATENT_PALM
      - FACE

  handled:
    type: string
    enum:
      - NOT_HANDLED
      - HANDLED

  modalities:
    type: array
    items:
      $ref: "#/definitions/modality"

  minutiaType:
    type: string
    enum:
      - ENDING
      - BIFURCATION

  transactionKind:
    type: string
    enum:
      - SUBJECT
      - LATENT

  minutiaPoint:
    type: object
    required:
      - x
      - y
    properties:
      x:
        type: integer
      "y":
        type: integer
      angle:
        type: integer
      quality:
        type: integer
      type:
        $ref: "#/definitions/minutiaType"
      index:
        type: integer

  matchedMinutiae:
    type: object
    required:
      - probeImpressionPosition
      - probeImpressionType
      - candidateImpressionPosition
      - candidateImpressionType
      - matchPairs
    properties:      
      probeImpressionPosition:
        type: integer
      probeImpressionType:
        type: integer
      candidateImpressionPosition:
        type: integer
      candidateImpressionType:
        type: integer
      delta:
        type: integer
      offsetX:
        type: integer
      offsetY:
        type: integer
      matchPairs:
        type: array
        items:
          type: object
          properties:
            probe:
              $ref: "#/definitions/minutiaPoint"
            candidate:
              $ref: "#/definitions/minutiaPoint"

  candidateList:
    type: array
    items:
      type: object
      title: candidateEntry
      properties:
        candidateId:
          type: string
        name:
          type: string
        score:
          type: integer
        decision:
          $ref: "#/definitions/decision"
        notes:
          type: string

  subjectListEntry:
    type: object
    properties:
      subjectId:
        type: string
      created:
        type: string
        format: date-time
      username:
        type: string
      modalities:
        type: array
        items:
          $ref: "#/definitions/modality"
      name:
        type: string
      galleries:
        type: array
        items:
          type: string

  candidate:
    type: object
    properties:
      transaction:
        $ref: "#/definitions/transaction"
      matchMinutiae:
        type: array
        items:
          $ref: "#/definitions/matchedMinutiae"

#region ITL Transactions
  transaction:
    type: object
    properties:
      type:
        $ref: "#/definitions/transactionKind"
      subjectTransaction:
        $ref: "#/definitions/subjectTransaction"
      latentTransaction:
        $ref: "#/definitions/latentTransaction"
      binaryTransaction:
        type: string
        format: byte

  subjectTransaction:
    type: object
    properties:
      transactionInformation:
        $ref: "#/definitions/transactionInformation"
      descriptiveText:
        type: array
        items:
          $ref: "#/definitions/tenprintDescriptiveText"
      minutiaeRecords:
        type: array
        items:
          $ref: "#/definitions/minutiaeRecord"
      fingerprintImages:
        type: array
        items:
          $ref: "#/definitions/fingerprintImage"
      facialAndSmtImages:
        type: array
        items:
          $ref: "#/definitions/facialAndSmtImages"
      palmprintImages:
        type: array
        items:
          $ref: "#/definitions/palmImage"

  latentTransaction:
    type: object
    title: latentTransaction
    properties:
      transactionInformation:
        $ref: "#/definitions/transactionInformation"
      descriptiveText:
        type: array
        items:
          $ref: "#/definitions/latentDescriptiveText"
      minutiaeRecords:
        type: array
        items:
          $ref: "#/definitions/minutiaeRecord"
      latentImages:
        type: array
        items:
          $ref: "#/definitions/latentImage"
      sourceRepresentations:
        type: array
        items:
          $ref: "#/definitions/sourceRepresentation"

#endregion

#region ITL Descriptive Text Records
  tenprintDescriptiveText:
    type: object
    properties:
      idc:
        type: integer
      retentionCode:
        type: string
        enum:
          - "Y"
          - "N"
      attentionIndicator:
        type: string
      socialSecurityAccountNumber:
        type: array
        items:
          type: string
      miscellaneousIdentificationNumber:
        type: array
        items:
          type: string
      name:
        type: string
      placeOfBirth:
        type: string
      countryOfCitizenship:
        type: array
        items:
          type: string
      dateOfBirth:
        type: array
        items:
          type: string
      sex:
        type: string
        enum:
          - F
          - G
          - M
          - "N"
          - "Y"
          - Z
          - X
      race:
        type: string
        enum:
          - A
          - B
          - I
          - U
          - W
      height:
        type: string
      weight:
        type: integer
      colorEyes:
        type: string
        enum:
          - BLK
          - BLU
          - BRO
          - GRY
          - GRN
          - HAZ
          - MAR
          - MUL
          - PNK
          - XXX
      hairColor:
        type: string
        enum:
          - BAL
          - BLK
          - BLN
          - BRO
          - GRY
          - RED
          - SDY
          - WHI
          - XXX
          - BLU
          - GRN
          - ONG
          - PNK
          - PLE
      residenceOfPersonFingerprinted:
        type: string
      amputatedOrBandaged:
        type: array
        items:
          type: object
          properties:
            impressionPosition:
              type: integer
            code:
              type: string
          minItems: 1
          maxItems: 13
      pointOfContact:
        type: object
        properties:
          name:
            type: string
          phoneNumber:
            type: string
      uniqueIdentificationNumber:
        type: array
        items:
          type: object
          properties:
            typeOfIdentificationNumber:
              type: string
            identificationNumber:
              type: string
          minItems: 1
          maxItems: 10
      noteField:
        type: string
      nameOne:
        type: string
      nameTwo:
        type: string
      nameThree:
        type: string
      operatorName:
        type: string

  latentDescriptiveText:
    type: object
    properties:
      idc:
        type: integer
      attentionIndicator:
        type: string
      contributorCaseIdentifierNumber:
        $ref: "#/definitions/contributorCaseIdentifierNumber"
      contributorCaseIdentifierExtension:
        type: integer
      placeOfBirth:
        type: string
      ageRange:
        type: object
        properties:
          min:
            type: integer
          max:
            type: integer
      race:
        type: string
        enum:
          - A
          - B
          - I
          - U
          - W
      scarsMarksAndTattoos:
        type: array
        items:
          type: string
      heightRange:
        type: object
        properties:
          min:
            type: string
          max:
            type: string
      weightRange:
        type: object
        properties:
          min:
            type: integer
          max:
            type: integer
      colorEyes:
        type: string
        enum:
          - BLK
          - BLU
          - BRO
          - GRY
          - GRN
          - HAZ
          - MAR
          - MUL
          - PNK
          - XXX
      hairColor:
        type: string
        enum:
          - BAL
          - BLK
          - BLN
          - BRO
          - GRY
          - RED
          - SDY
          - WHI
          - XXX
          - BLU
          - GRN
          - ONG
          - PNK
          - PLE
      geographicalAreaOfSearch:
        type: array
        items:
          type: string
      frictionRidgeGeneralizedPosition:
        type: array
        items:
          type: integer
      numberOfCandidatesReturned:
        type: integer
      unsolvedLatentMatchResponse:
        type: string
        enum:
          - "Y"
          - "N"
      noteField:
        type: string
      numberOfImagesRequested:
        type: integer

  contributorCaseIdentifierNumber:
    type: object
    properties:
      prefix:
        type: string
      identifier:
        type: string

#endregion


#
# ITL Non-Description Record Types
#

#region ITL Data Types

  transactionInformation:
    type: object
    properties:
      versionNumber:
        type: integer
      typeOfTransaction:
        type: string
      date:
        type: string
      priority:
        type: integer
      destinationAgency:
        type: string
      originatingAgency:
        type: string
      transactionControlNumber:
        type: string
      transactionControlReferenceNumber:
        type: string
      domain:
        type: object
        properties:
          name:
            type: string
          version:
            type: string
      gmt:
        type: string
      applicationProfiles:
        type: array
        items:
          type: object
          properties:
            organization:
              type: string
            name:
              type: string
            version:
              type: string
          maxItems: 99
      agencyNames:
        type: object
        properties:
          destination:
            type: string
          originating:
            type: string

  minutiaeRecord:
    type: object
    properties:
      idc:
        type: integer
      impressionType:
        type: integer
      minutiaeFormat:
        type: string
        enum:
          - S
          - U
      otherFeatureSets:
        type: object
        properties:
          ownerOrDeveloper:
            type: string
          processingAlgorithm:
            type: object
            properties:
              nameOfAlgorithm:
                type: string
              versionOfAlgorithm:
                type: string
          contactInformation:
            type: string
          # Custom fields
          impressionPosition:
            type: array
            items:
              type: integer
          minutiaTemplateBase64Encoded:
            type: string
            format: byte
          hitMinutia:
            type: string
          similarityScore:
            type: integer
      extendedFeatureSet:
        type: object
        properties:
          skeletonizedImage:
            type: string
            format: byte

  latentImage:
    type: object
    properties:
      idc:
        type: integer
      impressionType:
        type: integer
      width:
        type: integer
      height:
        type: integer
      scaleUnits:
        type: integer
      transmittedHorizontalPixelScale:
        type: integer
      transmittedVerticalPixelScale:
        type: integer
      compressionAlgorithm:
        type: string
      bitsPerPixel:
        type: integer
      impressionPosition:
        type: array
        items:
          type: integer
      latentQualityMetric:
        type: array
        items:
            $ref: "#/definitions/qualityMetric"
        maxItems: 9
      sourceRepresentation:
        type: array
        items:
          type: object
          properties:
            sourceRepresentationNumber:
              type: integer
            referenceSegmentPosition:
              type: integer
          maxItems: 255
      latentImage:
        type: string
        format: byte

  fingerprintImage:
    type: object
    properties:
      idc:
        type: integer
      impressionType:
        type: integer
      captureDate:
        type: string
      width:
        type: integer
      height:
        type: integer
      scaleUnits:
        type: integer
      transmittedHorizontalPixelScale:
        type: integer
      transmittedVerticalPixelScale:
        type: integer
      compressionAlgorithm:
        type: string
      bitsPerPixel:
        type: integer
      impressionPosition:
        type: integer
      amputatedOrBandaged:
        type: array
        items:
          type: object
          properties:
            impressionPosition:
              type: integer
            code:
              type: string
          maxItems: 5
      fingerSegmentPosition:
        type: array
        items:
          type: object
          properties:
            impressionPosition:
              type: integer
            left:
              type: integer
            right:
              type: integer
            top:
              type: integer
            bottom:
              type: integer
          maxItems: 5
      fingerprintQualityMetric:
        type: array
        items:
            $ref: "#/definitions/qualityMetric"
        maxItems: 5
      makeModelSerialNumber:
        $ref: "#/definitions/makeModelSerialNumber"
      fingerprintImage:
        type: string
        format: byte

  facialAndSmtImages:
    type: object
    properties:
      idc:
        type: integer
      imageType:
        type: string
      date:
        type: string
      width:
        type: integer
      height:
        type: integer
      compressionAlgorithm:
        type: string
      hairColor:
        type: array
        items:
          type: string
      subjectPose:
        type: string
        enum:
          - F
          - R
          - L
          - A
          - D
      poseOffsetAngle:
        type: integer
      makeModelSerialNumber:
        $ref: "#/definitions/makeModelSerialNumber"
      bodyPartImage:
        type: string
        format: byte

  palmImage:
    type: object
    properties:
      idc:
        type: integer
      impressionType:
        type: integer
      width:
        type: integer
      height:
        type: integer
      scaleUnits:
        type: integer
      transmittedHorizontalPixelScale:
        type: integer
      transmittedVerticalPixelScale:
        type: integer
      compressionAlgorithm:
        type: string
      bitsPerPixel:
        type: integer
      impressionPosition:
        type: integer
      amputatedOrBandaged:
        type: array
        items:
          type: object
          properties:
            impressionPosition:
              type: integer
            code:
              type: string
        maxItems: 9
      makeModelSerialNumber:
        $ref: "#/definitions/makeModelSerialNumber"
      palmprintImage:
        type: string
        format: byte

  sourceRepresentation:
    type: object
    properties:
      idc:
        type: integer
      sourceAgency:
        type: string
      width:
        type: integer
      height:
        type: integer
      scaleUnits:
        type: integer
      transmittedHorizontalPixelScale:
        type: integer
      transmittedVerticalPixelScale:
        type: integer
      compressionAlgorithm:
        type: string
      bitsPerPixel:
        type: integer
      colorSpace:
        type: string
      acquisitionSource:
        type: array
        items:
          type: object
          properties:
            acquisitionSourceType:
              type: integer
            analogToDigitalConversion:
              type: string
            radioTransmissionFormatDescription:
              type: string
            acquisitionSpecialCharacteristics:
              type: string
          minItems: 1
          maxItems: 9
      sourceRepresentationFormat:
        type: object
        properties:
          fileType:
            type: string
          decodingInstructions:
            type: string
      segments:
        type: array
        items:
          type: object
          required:
            - referenceSegmentPosition
            - internalFileReferencePointer
            - items
          properties:
            referenceSegmentPosition:
              type: integer
            internalFileReferencePointer:
              type: string
            items:
              type: array
              items:
                type: object
                required:
                  - x
                  - y
                properties:
                  x:
                    type: integer
                  y:
                    type: integer
                maxItems: 99
        maxItems: 99
      scannedHorizontalPixelScale:
        type: integer
      scannedVerticalPixelScale:
        type: integer
      timeIndex:
        type: array
        items:
          type: object
          properties:
            timeIndexStart:
              type: string
            timeIndexEnd:
              type: string
          maxItems: 99
      comment:
        type: string
      sourceRepresentationNumber:
        type: integer
      userDefinedFields:
        type: array
        items:
          type: string
      annotationInformation:
        type: array
        items:
          type: object
          properties:
            greenwichMeanTime:
              type: string
            processingAlgorithmNameVersion:
              type: string
            algorithmOwner:
              type: string
            processDescription:
              type: string
      deviceUniqueIdentifier:
        type: string
      makeModelSerialNumber:
        $ref: "#/definitions/makeModelSerialNumber"
      sourceAgencyName:
        type: string
      externalFileReference:
        type: string
      associatedContext:
        type: array
        items:
          type: object
          properties:
            associatedContextNumber:
              type: integer
            associatedSegmentPosition:
              type: integer
          maxItems: 255
      sourceRepresentationData:
        type: string
        format: byte

  makeModelSerialNumber:
    type: object
    properties:
      make:
        type: string
      model:
        type: string
      serialNumber:
        type: string

  qualityMetric:
    type: object
    properties:
      impressionPosition:
        type: integer
      quality:
        type: integer
      algorithmVendor:
        type: string
      algorithmProduct:
        type: integer

  gallery:
    type: object
    properties:
      name:
        type: string
      description:
        $ref: "#/definitions/galleryType"

  statusMessages:
    type: array
    items:
      $ref: "#/definitions/statusMessage"

  statusMessage:
    type: object
    properties:
      name:
        type: string
      message:
        type: string
      level:
        type: string

  identificationQuery:
    type: object
    properties:
      status:
        $ref: "#/definitions/identifyStatus"
#endregion